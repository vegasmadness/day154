---
import BaseLayout from '../../layouts/BaseLayout.astro';
import AuthGuard from '../../components/AuthGuard.astro';
---

<AuthGuard>
  <BaseLayout title="Comment Moderation - Admin" description="Manage and moderate blog comments">
    <div class="min-h-screen bg-gray-50 py-8">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
          <div class="flex items-center justify-between">
            <div>
              <h1 class="text-3xl font-bold text-gray-900">Comment Moderation</h1>
              <p class="mt-2 text-gray-600">Review and approve comments before they appear on your blog</p>
            </div>
            <div class="flex space-x-3">
              <a href="/admin/dashboard" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                ‚Üê Back to Dashboard
              </a>
            </div>
          </div>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center">
                    <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Pending Comments</dt>
                    <dd class="text-lg font-medium text-gray-900" id="pending-count">Loading...</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-green-100 rounded-md flex items-center justify-center">
                    <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Approved Comments</dt>
                    <dd class="text-lg font-medium text-gray-900" id="approved-count">Loading...</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
              <div class="flex items-center">
                <div class="flex-shrink-0">
                  <div class="w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center">
                    <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-1l-4 4z"></path>
                    </svg>
                  </div>
                </div>
                <div class="ml-5 w-0 flex-1">
                  <dl>
                    <dt class="text-sm font-medium text-gray-500 truncate">Total Comments</dt>
                    <dd class="text-lg font-medium text-gray-900" id="total-count">Loading...</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Filter Tabs -->
        <div class="bg-white shadow rounded-lg mb-6">
          <div class="border-b border-gray-200">
            <nav class="-mb-px flex space-x-8 px-6" aria-label="Tabs">
              <button id="pending-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-filter="pending">
                Pending Review
                <span id="pending-badge" class="bg-yellow-100 text-yellow-800 ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium">0</span>
              </button>
              <button id="approved-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-filter="approved">
                Approved
                <span id="approved-badge" class="bg-green-100 text-green-800 ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium">0</span>
              </button>
              <button id="all-tab" class="tab-button border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-filter="all">
                All Comments
                <span id="all-badge" class="bg-gray-100 text-gray-800 ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium">0</span>
              </button>
            </nav>
          </div>
        </div>

        <!-- Comments List -->
        <div class="bg-white shadow rounded-lg">
          <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Comments</h3>
          </div>
          <div id="comments-container" class="divide-y divide-gray-200">
            <!-- Comments will be loaded here -->
            <div class="p-6 text-center text-gray-500">
              <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto mb-4"></div>
              Loading comments...
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Comment Moderation Script -->
    <script>
      import { createClient } from '@supabase/supabase-js';
      
      // Initialize Supabase client
      const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
      const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
      const supabase = createClient(supabaseUrl, supabaseKey);
      
      let currentFilter = 'all';
      let comments = [];
      
      // Load comments on page load
      document.addEventListener('DOMContentLoaded', async () => {
        await loadComments();
        setupEventListeners();
      });
      
      // Setup event listeners
      function setupEventListeners() {
        // Tab switching
        document.querySelectorAll('.tab-button').forEach(button => {
          button.addEventListener('click', (e) => {
            const filter = e.target.dataset.filter;
            switchTab(filter);
          });
        });
      }
      
      // Load comments from Supabase
      async function loadComments() {
        try {
          const { data, error } = await supabase
            .from('comments')
            .select(`
              *,
              posts!inner(title, slug)
            `)
            .order('created_at', { ascending: false });
          
          if (error) {
            console.error('Error loading comments:', error);
            showError('Failed to load comments');
            return;
          }
          
          comments = data || [];
          updateStats();
          renderComments();
          
        } catch (error) {
          console.error('Error loading comments:', error);
          showError('Failed to load comments');
        }
      }
      
      // Update statistics
      function updateStats() {
        const pending = comments.filter(c => !c.is_approved).length;
        const approved = comments.filter(c => c.is_approved).length;
        const total = comments.length;
        
        document.getElementById('pending-count').textContent = pending;
        document.getElementById('approved-count').textContent = approved;
        document.getElementById('total-count').textContent = total;
        
        document.getElementById('pending-badge').textContent = pending;
        document.getElementById('approved-badge').textContent = approved;
        document.getElementById('all-badge').textContent = total;
      }
      
      // Switch tabs
      function switchTab(filter) {
        currentFilter = filter;
        
        // Update tab styles
        document.querySelectorAll('.tab-button').forEach(button => {
          if (button.dataset.filter === filter) {
            button.className = 'tab-button border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm';
          } else {
            button.className = 'tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm';
          }
        });
        
        renderComments();
      }
      
      // Render comments based on current filter
      function renderComments() {
        const container = document.getElementById('comments-container');
        
        let filteredComments = comments;
        if (currentFilter === 'pending') {
          filteredComments = comments.filter(c => !c.is_approved);
        } else if (currentFilter === 'approved') {
          filteredComments = comments.filter(c => c.is_approved);
        }
        
        if (filteredComments.length === 0) {
          container.innerHTML = `
            <div class="p-6 text-center text-gray-500">
              <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-1l-4 4z"></path>
              </svg>
              <p class="text-lg font-medium text-gray-900 mb-2">No comments found</p>
              <p class="text-gray-500">There are no ${currentFilter === 'all' ? '' : currentFilter + ' '}comments to display.</p>
            </div>
          `;
          return;
        }
        
        container.innerHTML = filteredComments.map(comment => `
          <div class="p-6 comment-item" data-comment-id="${comment.id}">
            <div class="flex items-start space-x-4">
              <div class="flex-shrink-0">
                <div class="w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center">
                  <span class="text-sm font-medium text-gray-700">
                    ${(comment.author_name || 'A').charAt(0).toUpperCase()}
                  </span>
                </div>
              </div>
              <div class="flex-1 min-w-0">
                <div class="flex items-center justify-between mb-2">
                  <div class="flex items-center space-x-2">
                    <p class="text-sm font-medium text-gray-900">
                      ${comment.author_name || 'Anonymous'}
                      ${comment.author_id ? '<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800 ml-2">Verified</span>' : ''}
                    </p>
                    <span class="text-gray-500">‚Ä¢</span>
                    <p class="text-sm text-gray-500">${formatDate(comment.created_at)}</p>
                  </div>
                  <div class="flex items-center space-x-2">
                    ${comment.is_approved 
                      ? '<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Approved</span>'
                      : '<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>'
                    }
                  </div>
                </div>
                <div class="mb-3">
                  <p class="text-sm text-gray-600 mb-2">
                    On: <a href="/blog/${comment.posts.slug}" class="text-indigo-600 hover:text-indigo-500 font-medium" target="_blank">${comment.posts.title}</a>
                  </p>
                  <div class="bg-gray-50 rounded-md p-3">
                    <p class="text-gray-900 whitespace-pre-wrap">${comment.content}</p>
                  </div>
                </div>
                <div class="flex items-center space-x-3">
                  ${!comment.is_approved 
                    ? `<button onclick="approveComment('${comment.id}')" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        Approve
                      </button>`
                    : `<button onclick="unapproveComment('${comment.id}')" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        Unapprove
                      </button>`
                  }
                  <button onclick="deleteComment('${comment.id}')" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    Delete
                  </button>
                </div>
              </div>
            </div>
          </div>
        `).join('');
      }
      
      // Approve comment
      window.approveComment = async function(commentId) {
        try {
          const { error } = await supabase
            .from('comments')
            .update({ is_approved: true })
            .eq('id', commentId);
          
          if (error) {
            console.error('Error approving comment:', error);
            showError('Failed to approve comment');
            return;
          }
          
          // Update local state
          const comment = comments.find(c => c.id === commentId);
          if (comment) {
            comment.is_approved = true;
          }
          
          updateStats();
          renderComments();
          showSuccess('Comment approved successfully!');
          
        } catch (error) {
          console.error('Error approving comment:', error);
          showError('Failed to approve comment');
        }
      };
      
      // Unapprove comment
      window.unapproveComment = async function(commentId) {
        try {
          const { error } = await supabase
            .from('comments')
            .update({ is_approved: false })
            .eq('id', commentId);
          
          if (error) {
            console.error('Error unapproving comment:', error);
            showError('Failed to unapprove comment');
            return;
          }
          
          // Update local state
          const comment = comments.find(c => c.id === commentId);
          if (comment) {
            comment.is_approved = false;
          }
          
          updateStats();
          renderComments();
          showSuccess('Comment unapproved successfully!');
          
        } catch (error) {
          console.error('Error unapproving comment:', error);
          showError('Failed to unapprove comment');
        }
      };
      
      // Delete comment
      window.deleteComment = async function(commentId) {
        if (!confirm('Are you sure you want to delete this comment? This action cannot be undone.')) {
          return;
        }
        
        try {
          const { error } = await supabase
            .from('comments')
            .delete()
            .eq('id', commentId);
          
          if (error) {
            console.error('Error deleting comment:', error);
            showError('Failed to delete comment');
            return;
          }
          
          // Update local state
          comments = comments.filter(c => c.id !== commentId);
          
          updateStats();
          renderComments();
          showSuccess('Comment deleted successfully!');
          
        } catch (error) {
          console.error('Error deleting comment:', error);
          showError('Failed to delete comment');
        }
      };
      
      // Utility functions
      function formatDate(dateString) {
        return new Date(dateString).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });
      }
      
      function showSuccess(message) {
        // Simple alert for now - could be replaced with a toast notification
        alert(message);
      }
      
      function showError(message) {
        // Simple alert for now - could be replaced with a toast notification
        alert('Error: ' + message);
      }
    </script>
  </BaseLayout>
</AuthGuard>