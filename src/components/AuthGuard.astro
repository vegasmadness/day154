---
// Remove server-side auth check as it doesn't work properly with Supabase in Astro
// Client-side authentication will handle the redirect
---

<!-- Admin authentication guard -->
<slot />

<script>
  import { supabaseBrowser } from '../utils/supabase-browser';

  async function checkAuth() {
    try {
      const { data: { user }, error } = await supabaseBrowser.auth.getUser();
      
      if (error) {
        console.error('Auth error:', error.message);
        setTimeout(() => {
          window.location.href = '/admin';
        }, 100);
        return;
      }
      
      if (!user) {
        console.log('No user session found');
        setTimeout(() => {
          window.location.href = '/admin';
        }, 100);
        return;
      }
      
      // Check if user has admin role
      const userRole = user.user_metadata?.role;
      const appRole = user.app_metadata?.role;
      const isAdmin = userRole === 'admin' || appRole === 'admin';
      
      console.log('User auth check:', {
        email: user.email,
        userRole,
        appRole,
        isAdmin
      });
      
      if (!isAdmin) {
        console.log('User is not admin, redirecting');
        setTimeout(() => {
          window.location.href = '/?error=unauthorized';
        }, 100);
        return;
      }
      
      console.log('Authenticated admin user:', user.email);
    } catch (error) {
      console.error('Auth check error:', error);
      setTimeout(() => {
        window.location.href = '/admin';
      }, 100);
    }
  }

  // Wait for page to fully load before checking auth
  document.addEventListener('DOMContentLoaded', () => {
    // Add a longer delay to ensure session is properly established
    setTimeout(checkAuth, 500);
  });

  // Listen for auth state changes
  supabaseBrowser.auth.onAuthStateChange((event, session) => {
    console.log('Auth state change in AuthGuard:', event, session?.user?.email);
    
    if (event === 'SIGNED_OUT') {
      window.location.href = '/admin';
    } else if (event === 'SIGNED_IN' && session?.user) {
      // Re-check auth when user signs in to validate admin role
      setTimeout(checkAuth, 100);
    }
  });
</script>