---
import BaseLayout from '../../layouts/BaseLayout.astro';
import AuthGuard from '../../components/AuthGuard.astro';
---

<BaseLayout title="Settings - Admin">
  <AuthGuard>
    <div class="min-h-screen bg-gray-50">
      <!-- Header -->
      <div class="bg-white shadow">
        <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
          <div class="flex items-center justify-between">
            <div>
              <h1 class="text-3xl font-bold text-gray-900">Settings</h1>
              <p class="mt-1 text-sm text-gray-500">Manage your blog configuration and preferences</p>
            </div>
            <div class="flex items-center space-x-3">
              <a href="/admin/dashboard" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                <svg class="-ml-1 mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Dashboard
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <main class="max-w-4xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
          <div class="space-y-6">
            <!-- General Settings -->
            <div class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">General Settings</h3>
                
                <form id="general-settings-form" class="space-y-6">
                  <div class="grid grid-cols-1 gap-6">
                    <!-- Blog Title -->
                    <div>
                      <label for="blog-title" class="block text-sm font-medium text-gray-700">Blog Title</label>
                      <input type="text" name="blog_title" id="blog-title" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="My Awesome Blog">
                      <p class="mt-1 text-sm text-gray-500">The main title of your blog</p>
                    </div>

                    <!-- Blog Description -->
                    <div>
                      <label for="blog-description" class="block text-sm font-medium text-gray-700">Blog Description</label>
                      <textarea name="blog_description" id="blog-description" rows="3" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="A brief description of your blog..."></textarea>
                      <p class="mt-1 text-sm text-gray-500">Used in meta tags and social sharing</p>
                    </div>

                    <!-- Blog URL -->
                    <div>
                      <label for="blog-url" class="block text-sm font-medium text-gray-700">Blog URL</label>
                      <input type="url" name="blog_url" id="blog-url" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="https://myblog.com">
                      <p class="mt-1 text-sm text-gray-500">The canonical URL of your blog</p>
                    </div>

                    <!-- Posts Per Page -->
                    <div>
                      <label for="posts-per-page" class="block text-sm font-medium text-gray-700">Posts Per Page</label>
                      <select name="posts_per_page" id="posts-per-page" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                        <option value="5">5 posts</option>
                        <option value="10" selected>10 posts</option>
                        <option value="15">15 posts</option>
                        <option value="20">20 posts</option>
                      </select>
                      <p class="mt-1 text-sm text-gray-500">Number of posts to display per page</p>
                    </div>
                  </div>

                  <div class="flex justify-end">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Save General Settings
                    </button>
                  </div>
                </form>
              </div>
            </div>

            <!-- SEO Settings -->
            <div class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">SEO Settings</h3>
                
                <form id="seo-settings-form" class="space-y-6">
                  <div class="grid grid-cols-1 gap-6">
                    <!-- Meta Keywords -->
                    <div>
                      <label for="meta-keywords" class="block text-sm font-medium text-gray-700">Meta Keywords</label>
                      <input type="text" name="meta_keywords" id="meta-keywords" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="blog, technology, programming">
                      <p class="mt-1 text-sm text-gray-500">Comma-separated keywords for SEO</p>
                    </div>

                    <!-- Google Analytics ID -->
                    <div>
                      <label for="google-analytics" class="block text-sm font-medium text-gray-700">Google Analytics ID</label>
                      <input type="text" name="google_analytics_id" id="google-analytics" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="G-XXXXXXXXXX">
                      <p class="mt-1 text-sm text-gray-500">Your Google Analytics measurement ID</p>
                    </div>

                    <!-- Search Console -->
                    <div>
                      <label for="search-console" class="block text-sm font-medium text-gray-700">Google Search Console Verification</label>
                      <input type="text" name="search_console_verification" id="search-console" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="google-site-verification=...">
                      <p class="mt-1 text-sm text-gray-500">Meta tag content for Search Console verification</p>
                    </div>

                    <!-- Sitemap Generation -->
                    <div class="flex items-center">
                      <input id="enable-sitemap" name="enable_sitemap" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" checked>
                      <label for="enable-sitemap" class="ml-2 block text-sm text-gray-900">
                        Enable automatic sitemap generation
                      </label>
                    </div>
                  </div>

                  <div class="flex justify-end">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Save SEO Settings
                    </button>
                  </div>
                </form>
              </div>
            </div>

            <!-- Social Media Settings -->
            <div class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Social Media</h3>
                
                <form id="social-settings-form" class="space-y-6">
                  <div class="grid grid-cols-1 gap-6">
                    <!-- Twitter -->
                    <div>
                      <label for="twitter-handle" class="block text-sm font-medium text-gray-700">Twitter Handle</label>
                      <div class="mt-1 flex rounded-md shadow-sm">
                        <span class="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm">@</span>
                        <input type="text" name="twitter_handle" id="twitter-handle" class="flex-1 block w-full rounded-none rounded-r-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="yourusername">
                      </div>
                    </div>

                    <!-- GitHub -->
                    <div>
                      <label for="github-username" class="block text-sm font-medium text-gray-700">GitHub Username</label>
                      <input type="text" name="github_username" id="github-username" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="yourusername">
                    </div>

                    <!-- LinkedIn -->
                    <div>
                      <label for="linkedin-profile" class="block text-sm font-medium text-gray-700">LinkedIn Profile URL</label>
                      <input type="url" name="linkedin_profile" id="linkedin-profile" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="https://linkedin.com/in/yourprofile">
                    </div>

                    <!-- Email -->
                    <div>
                      <label for="contact-email" class="block text-sm font-medium text-gray-700">Contact Email</label>
                      <input type="email" name="contact_email" id="contact-email" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="contact@yourblog.com">
                    </div>
                  </div>

                  <div class="flex justify-end">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Save Social Settings
                    </button>
                  </div>
                </form>
              </div>
            </div>

            <!-- Comment Settings -->
            <div class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Comments & Engagement</h3>
                
                <form id="comment-settings-form" class="space-y-6">
                  <div class="space-y-4">
                    <!-- Enable Comments -->
                    <div class="flex items-center">
                      <input id="enable-comments" name="enable_comments" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" checked>
                      <label for="enable-comments" class="ml-2 block text-sm text-gray-900">
                        Enable comments on blog posts
                      </label>
                    </div>

                    <!-- Moderate Comments -->
                    <div class="flex items-center">
                      <input id="moderate-comments" name="moderate_comments" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
                      <label for="moderate-comments" class="ml-2 block text-sm text-gray-900">
                        Require approval for new comments
                      </label>
                    </div>

                    <!-- Enable Likes -->
                    <div class="flex items-center">
                      <input id="enable-likes" name="enable_likes" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" checked>
                      <label for="enable-likes" class="ml-2 block text-sm text-gray-900">
                        Enable like button on posts
                      </label>
                    </div>

                    <!-- Show Like Count -->
                    <div class="flex items-center">
                      <input id="show-like-count" name="show_like_count" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" checked>
                      <label for="show-like-count" class="ml-2 block text-sm text-gray-900">
                        Display like count publicly
                      </label>
                    </div>
                  </div>

                  <div class="flex justify-end">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Save Comment Settings
                    </button>
                  </div>
                </form>
              </div>
            </div>

            <!-- Profile Settings -->
            <div class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Profile Settings</h3>
                
                <form id="profile-settings-form" class="space-y-6">
                  <div class="grid grid-cols-1 gap-6">
                    <!-- Full Name -->
                    <div>
                      <label for="full-name" class="block text-sm font-medium text-gray-700">Full Name</label>
                      <input type="text" name="full_name" id="full-name" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="Your Full Name">
                    </div>

                    <!-- Bio -->
                    <div>
                      <label for="bio" class="block text-sm font-medium text-gray-700">Bio</label>
                      <textarea name="bio" id="bio" rows="4" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="Tell us about yourself..."></textarea>
                    </div>

                    <!-- Avatar URL -->
                    <div>
                      <label for="avatar-url" class="block text-sm font-medium text-gray-700">Avatar URL</label>
                      <input type="url" name="avatar_url" id="avatar-url" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="https://example.com/avatar.jpg">
                    </div>

                    <!-- Website -->
                    <div>
                      <label for="website" class="block text-sm font-medium text-gray-700">Website</label>
                      <input type="url" name="website" id="website" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" placeholder="https://yourwebsite.com">
                    </div>
                  </div>

                  <div class="flex justify-end">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Save Profile Settings
                    </button>
                  </div>
                </form>
              </div>
            </div>

            <!-- Danger Zone -->
            <div class="bg-white shadow rounded-lg border-l-4 border-red-400">
              <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-red-900 mb-4">Danger Zone</h3>
                
                <div class="space-y-4">
                  <div class="flex items-center justify-between p-4 bg-red-50 rounded-lg">
                    <div>
                      <h4 class="text-sm font-medium text-red-900">Export Blog Data</h4>
                      <p class="text-sm text-red-700">Download all your blog posts and data as JSON</p>
                    </div>
                    <button id="export-data" class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50">
                      Export Data
                    </button>
                  </div>

                  <div class="flex items-center justify-between p-4 bg-red-50 rounded-lg">
                    <div>
                      <h4 class="text-sm font-medium text-red-900">Clear All Cache</h4>
                      <p class="text-sm text-red-700">Clear all cached data and regenerate static files</p>
                    </div>
                    <button id="clear-cache" class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50">
                      Clear Cache
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- Loading Overlay -->
    <div id="loading-overlay" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
      <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
          <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100">
            <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-indigo-600"></div>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mt-2">Saving Settings...</h3>
          <p class="text-sm text-gray-500 mt-1">Please wait while we update your settings.</p>
        </div>
      </div>
    </div>
  </AuthGuard>
</BaseLayout>

<script>
  import { supabase } from '../../utils/supabase';

  let currentUser: any = null;

  function showLoading() {
    document.getElementById('loading-overlay')?.classList.remove('hidden');
  }

  function hideLoading() {
    document.getElementById('loading-overlay')?.classList.add('hidden');
  }

  function showSuccess(message: string) {
    hideLoading();
    alert('Success: ' + message);
  }

  function showError(message: string) {
    hideLoading();
    alert('Error: ' + message);
  }

  async function loadUserProfile() {
    try {
      const { data: { user }, error: userError } = await supabase.auth.getUser();
      if (userError || !user) {
        throw new Error('You must be logged in to access settings');
      }

      currentUser = user;

      // Load profile data
      const { data: profile, error: profileError } = await supabase
        .from('profiles')
        .select('*')
        .eq('id', user.id)
        .single();

      if (profile) {
        populateProfileForm(profile);
      }

      // Load blog settings (placeholder - would come from a settings table)
      loadBlogSettings();

    } catch (error) {
      console.error('Error loading user profile:', error);
      showError(error.message || 'Failed to load settings');
    }
  }

  function populateProfileForm(profile: any) {
    const fullName = document.getElementById('full-name') as HTMLInputElement;
    const bio = document.getElementById('bio') as HTMLTextAreaElement;
    const avatarUrl = document.getElementById('avatar-url') as HTMLInputElement;
    const website = document.getElementById('website') as HTMLInputElement;

    if (fullName) fullName.value = profile.full_name || '';
    if (bio) bio.value = profile.bio || '';
    if (avatarUrl) avatarUrl.value = profile.avatar_url || '';
    if (website) website.value = profile.website || '';
  }

  function loadBlogSettings() {
    // Placeholder for loading blog settings
    // In a real implementation, you would load these from a settings table
    const blogTitle = document.getElementById('blog-title') as HTMLInputElement;
    const blogDescription = document.getElementById('blog-description') as HTMLTextAreaElement;
    const blogUrl = document.getElementById('blog-url') as HTMLInputElement;

    if (blogTitle) blogTitle.value = 'My Awesome Blog';
    if (blogDescription) blogDescription.value = 'A blog about technology and programming';
    if (blogUrl) blogUrl.value = window.location.origin;
  }

  async function saveProfileSettings(formData: FormData) {
    try {
      showLoading();

      if (!currentUser) {
        throw new Error('User not found');
      }

      const profileData = {
        full_name: formData.get('full_name') as string,
        bio: formData.get('bio') as string,
        avatar_url: formData.get('avatar_url') as string,
        website: formData.get('website') as string,
        updated_at: new Date().toISOString()
      };

      const { error } = await supabase
        .from('profiles')
        .upsert([{ id: currentUser.id, ...profileData }]);

      if (error) {
        throw error;
      }

      showSuccess('Profile settings saved successfully!');

    } catch (error) {
      console.error('Error saving profile settings:', error);
      showError(error.message || 'Failed to save profile settings');
    }
  }

  async function saveBlogSettings(formData: FormData, settingsType: string) {
    try {
      showLoading();

      // In a real implementation, you would save these to a settings table
      // For now, we'll just show a success message
      showSuccess(`${settingsType} settings saved successfully!`);

    } catch (error) {
      console.error(`Error saving ${settingsType} settings:`, error);
      showError(`Failed to save ${settingsType} settings`);
    }
  }

  async function exportBlogData() {
    try {
      showLoading();

      // Fetch all posts
      const { data: posts, error: postsError } = await supabase
        .from('posts')
        .select(`
          *,
          profiles:author_id(full_name, email),
          post_tags(tags(name))
        `);

      if (postsError) {
        throw postsError;
      }

      // Fetch all comments
      const { data: comments, error: commentsError } = await supabase
        .from('comments')
        .select('*');

      if (commentsError) {
        throw commentsError;
      }

      // Create export data
      const exportData = {
        exported_at: new Date().toISOString(),
        posts: posts || [],
        comments: comments || [],
        version: '1.0'
      };

      // Download as JSON file
      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `blog-export-${new Date().toISOString().split('T')[0]}.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);

      hideLoading();
      alert('Blog data exported successfully!');

    } catch (error) {
      console.error('Error exporting blog data:', error);
      showError(error.message || 'Failed to export blog data');
    }
  }

  function clearCache() {
    // Placeholder for cache clearing functionality
    showLoading();
    setTimeout(() => {
      hideLoading();
      alert('Cache cleared successfully!');
    }, 1000);
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Load user profile and settings
    loadUserProfile();

    // Form submissions
    document.getElementById('general-settings-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      await saveBlogSettings(formData, 'General');
    });

    document.getElementById('seo-settings-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      await saveBlogSettings(formData, 'SEO');
    });

    document.getElementById('social-settings-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      await saveBlogSettings(formData, 'Social Media');
    });

    document.getElementById('comment-settings-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      await saveBlogSettings(formData, 'Comment');
    });

    document.getElementById('profile-settings-form')?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      await saveProfileSettings(formData);
    });

    // Danger zone actions
    document.getElementById('export-data')?.addEventListener('click', exportBlogData);
    document.getElementById('clear-cache')?.addEventListener('click', clearCache);
  });
</script>